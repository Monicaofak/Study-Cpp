#include <iostream>
using namespace std;
int main()
{
   //array
   //存储在一块连续的内存空间中
   //数组名就是这块连续内存空间的首地址
   double score[] {11,22,33,44,55};  //数组类型 double[]
   double * ptr_score = score;
   cout<<sizeof(score)<<'\t'<<sizeof(ptr_score) <<endl;  //数组：一个整数占8字节，5个整数 
    //指针就是用4个字节表示的（指针一般通过16进制的整型存放）  虽然是double型指针，但也是4字节
   cout <<ptr_score[3]<<endl;
}

//int num[50];  num是数组名，也可理解为数组的首地址
//num 的值与&num[0]的值相同
//数组第 i+1个元素可表示为
  //地址：&num[i+1]或num + i + 1
  //值：num[i+1] 或*(num + i + 1)
  //为指向数组的指针赋值：
  //int * ptr_num = num;或int ptr*num = &num[0];
  //指针变量可以指向数组元素
  //int * ptr_num = &num[4];或int * ptr_num = num + 4;



*********************************************************************************************************************************
#include <iostream>
using namespace std;
int num1 = 0;  //全局初始化
int * ptr1;    //全局未初始化区
int main()
 {   
    int arrays[] {15,20,40,50};
    int* p_arrays = arrays;
    
    for(int i = 0; i < 5; i++)
    {
    cout<<*(p_arrays+i)<<endl;
    }
 }



